Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	СформироватьДвижения();

	РасчетОклада();

	РассчитатьПремиюЗаРаботу();

	РасчетОтпуска();
	
	РасчетНДФЛ();

	ЗаполнениеРегистраВзаиморасчетов();
КонецПроцедуры

Процедура СформироватьДвижения()

	СформироватьДвиженияПоОкладу();

	СформироватьДвиженияПоОтпуску();

	СформироватьДвижениеПремииЗаРаботу();
	
	СформироватьДвиженияПоУдержаниям();

	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
    Движения.ВКМ_Удержания.Записать();
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу()

	Запрос = Новый запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.Подразделение
	|ПОМЕСТИТЬ ВТ_Сотрудник
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудникаСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВТ_Сотрудник.Сотрудник КАК Сотрудник,
	|	ВТ_Сотрудник.НомерСтроки КАК НомерСтроки,
	|	ВТ_Сотрудник.ДатаНачала,
	|	ВТ_Сотрудник.ДатаОкончания,
	|	ВТ_Сотрудник.ВидРасчета,
	|	ВТ_Сотрудник.Подразделение
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудника.СрезПоследних(&ПериодРегистрации, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Сотрудник.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Сотрудник КАК ВТ_Сотрудник)) КАК ВКМ_УсловияОплатыСотрудникаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудник КАК ВТ_Сотрудник
	|		ПО (ВКМ_УсловияОплатыСотрудникаСрезПоследних.Сотрудник = ВТ_Сотрудник.Сотрудник)";

	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
		Движение.Показатель = Выборка.оклад;
		Движение.ПериодДействияНачало = НачалоМесяца(Дата);
		Движение.ПериодДействияКонец = КонецМесяца(Дата);

	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДвиженияПоОтпуску()


	БазовыйПериодНачало = ДобавитьМесяц(НачалоМесяца(Дата), -12);

	БазовыйПериодКонец = НачалоМесяца(Дата) - 1;

	Фильтр = Новый Структура;
	Фильтр.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);

	НайденныеСтроки = Начисления.НайтиСтроки(Фильтр);

	Для Каждого Строка Из НайденныеСтроки Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Подразделение = Строка.Подразделение;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ДатаОкончания;
		Движение.БазовыйПериодНачало = БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = БазовыйПериодКонец;

	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвижениеПремииЗаРаботу()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.ВидРасчета,
	|	ВКМ_УсловияОплатыСотрудникаСрезПоследних.ПроцентОтРабот
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.ПроцентОтРабот КАК ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудника.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачислениеЗаработнойПлаты.ПроцентОтРабот КАК ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот
	|			ГДЕ
	|				ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Ссылка = &Ссылка
	|				И ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.ВидРасчета = &ВидРасчета)) КАК
	|			ВКМ_УсловияОплатыСотрудникаСрезПоследних
	|		ПО ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Сотрудник = ВКМ_УсловияОплатыСотрудникаСрезПоследних.Сотрудник
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.ВидРасчета = &ВидРасчета";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияЗаРаботу);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	БазовыйПериодНачало = ДобавитьМесяц(НачалоМесяца(Дата), -12);

	БазовыйПериодКонец = НачалоМесяца(Дата) - 1;

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = НачалоМесяца(Дата);
		Движение.Сотрудник = Выборка.Сотрудник;

		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.ПроцентОтРабот = Выборка.ПроцентОтРабот;
		Движение.БазовыйПериодНачало = БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = БазовыйПериодКонец;
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияПоУдержаниям()
	
	Для Каждого  Строка Из   Начисления Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Налог;
		Движение.ПериодРегистрации = НачалоМесяца(Дата);
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
        Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Регистратор = Ссылка;
        Движение.Сотрудник = Строка.Сотрудник;
     КонецЦикла;


КонецПроцедуры


Процедура РасчетОклада()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
				   |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
				   |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт
				   |ИЗ
				   |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
				   |	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";

	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];

		Если Выборка.План <> 0 Тогда
			Движение.Результат = Движение.Показатель / Выборка.План * Выборка.Факт;
		КонецЕсли;

	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);

КонецПроцедуры

Процедура РассчитатьПремиюЗаРаботу()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ВыполненыеСотрудникомРаботыОбороты.Сотрудник,
	|	ЕСТЬNULL(ВКМ_ВыполненыеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаПремии,
	|	ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.НомерСтроки
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненыеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачислениеЗаработнойПлаты.ПроцентОтРабот КАК ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот
	|		ГДЕ
	|			ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Ссылка = &Ссылка
	|			И ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.ВидРасчета = &ВидРасчета)) КАК ВКМ_ВыполненыеСотрудникомРаботыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеЗаработнойПлаты.ПроцентОтРабот КАК
	|			ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот
	|		ПО ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Сотрудник = ВКМ_ВыполненыеСотрудникомРаботыОбороты.Сотрудник
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗаработнойПлатыПроцентОтРабот.ВидРасчета = &ВидРасчета";

	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияЗаРаботу);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];

		Если Выборка.СуммаПремии <> 0 Тогда
			Движение.Результат = Выборка.СуммаПремии;
		КонецЕсли;

	КонецЦикла;

	Движения.ВКМ_ДополнительныеНачисления.Записать( , Истина);

КонецПроцедуры


Процедура РасчетОтпуска()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК ОсновнаяБаза,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод КАК ЗначениеБазовыйПериод,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза КАК ДопБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК ВсегоНачисленно
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Регистратор
	|				И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.ВсегоНачисленно * Выборка.Факт / Выборка.ЗначениеБазовыйПериод;
		Движение.ДнейБаза = Выборка.ЗначениеБазовыйПериод;
		Движение.БазаРезультат = Выборка.ВсегоНачисленно;
		Движение.ЧислоДней = Выборка.Факт;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
КонецПроцедуры

Процедура РасчетНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза) КАК РезультатБаза2,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК РезультатБаза1,
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки1,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрез, Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрез, Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза,
		|	ВКМ_Удержания.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения); 
	
	Разрез = Новый Массив;
	Разрез.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Разрез", Разрез);
   
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки1 - 1];
		Движение.Результат = Выборка.РезультатБаза * 13 /100;
	КонецЦикла;

     Движения.ВКМ_Удержания.Записать(, Истина);
КонецПроцедуры


Процедура ЗаполнениеРегистраВзаиморасчетов()
	

	//Пока ОкладРаботника.Следующий() Цикл
	//	Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
	//	Движение.Сотрудник = ОкладРаботника.Сотрудник;
	//	Движение.Период = Дата;
	//	Движение.Сумма = ОкладРаботника.СуммаВыплаты;

	//КонецЦикла;

	//Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
КонецПроцедуры